syntax = "proto3";

package userservice;

option go_package = "github.com/ocenb/music-protos/gen/go/userservice";

import "buf/validate/validate.proto";

service UserService {
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc Logout (LogoutRequest) returns (LogoutResponse);
  rpc LogoutAll (LogoutAllRequest) returns (LogoutAllResponse);
  rpc Refresh (RefreshRequest) returns (RefreshResponse);
  rpc Verify (VerifyRequest) returns (VerifyResponse);
  rpc NewVerification (NewVerificationRequest) returns (NewVerificationResponse);
  rpc ChangeEmail (ChangeEmailRequest) returns (ChangeEmailResponse);
  rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse);

	rpc GetUserByUsername (GetUserByUsernameRequest) returns (GetUserByUsernameResponse);
	rpc ChangeUsername (ChangeUsernameRequest) returns (ChangeUsernameResponse);
	rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse);
}


message UserPrivateModel {
  int64 id = 1;
  string username = 2;
  string email = 3;
  string createdAt = 4;
}
message UserPublicModel {
  int64 id = 1;
  string username = 2;
	int64 followersCount = 3;
}

message RegisterRequest {
	string username = 1 [(buf.validate.field) = {string: {min_len: 1, max_len: 20, pattern: "^[a-z0-9][a-z0-9_-]*$"}}];
  string email = 2 [(buf.validate.field) = {string: {email: true}}];
  string password = 3 [(buf.validate.field) = {string: {min_len: 5, max_len: 50, pattern: "^[a-zA-Z0-9!@#$%^&*?-]*$"}}];
}
message RegisterResponse {
  UserPrivateModel user = 1;
}

message LoginRequest {
  string email = 1 [(buf.validate.field) = {string: {email: true}}];
  string password = 2 [(buf.validate.field) = {string: {min_len: 5, max_len: 50, pattern: "^[a-zA-Z0-9!@#$%^&*?-]*$"}}];
}
message LoginResponse {
	UserPrivateModel user = 1;
  string accessToken = 2;
  string refreshToken = 3;
}

message LogoutRequest {
  string accessToken = 1;
}
message LogoutResponse {
  bool success = 1;
}

message LogoutAllRequest {
  string accessToken = 1;
}
message LogoutAllResponse {
  bool success = 1;
}

message RefreshRequest {
  string refreshToken = 1;
}
message RefreshResponse {
  UserPrivateModel user = 1;
	string accessToken = 2;
  string refreshToken = 3;
}

message VerifyRequest {
  string verifyToken = 1;
}
message VerifyResponse {
  UserPrivateModel user = 1;
	string accessToken = 2;
  string refreshToken = 3;
}

message NewVerificationRequest {
  string email = 1 [(buf.validate.field) = {string: {email: true}}];
  string password = 2 [(buf.validate.field) = {string: {min_len: 5, max_len: 50, pattern: "^[a-zA-Z0-9!@#$%^&*?-]*$"}}];
}
message NewVerificationResponse {
  UserPrivateModel user = 1;
}

message ChangeEmailRequest {
  string email = 1 [(buf.validate.field) = {string: {email: true}}];
	string accessToken = 2;
}
message ChangeEmailResponse {
  UserPrivateModel user = 1;
	string accessToken = 2;
  string refreshToken = 3;
}

message ChangePasswordRequest {
  string oldPassword = 1 [(buf.validate.field) = {string: {min_len: 5, max_len: 50, pattern: "^[a-zA-Z0-9!@#$%^&*?-]*$"}}];
  string newPassword = 2 [(buf.validate.field) = {string: {min_len: 5, max_len: 50, pattern: "^[a-zA-Z0-9!@#$%^&*?-]*$"}}];
	string accessToken = 3;
}
message ChangePasswordResponse {
  UserPrivateModel user = 1;
	string accessToken = 2;
  string refreshToken = 3;
}


message GetUserByUsernameRequest {
	string accessToken = 1;
  string username = 2 [(buf.validate.field) = {string: {min_len: 1, max_len: 20, pattern: "^[a-z0-9][a-z0-9_-]*$"}}];
}
message GetUserByUsernameResponse {
  UserPublicModel user = 1;
}

message ChangeUsernameRequest {
	string accessToken = 1;
  string username = 2 [(buf.validate.field) = {string: {min_len: 1, max_len: 20, pattern: "^[a-z0-9][a-z0-9_-]*$"}}];
}
message ChangeUsernameResponse {
  UserPublicModel user = 1;
}

message DeleteUserRequest {
  string accessToken = 1;
}
message DeleteUserResponse {
	bool success = 1;
}
